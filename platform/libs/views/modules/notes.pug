extends ../layout

block content
	include ../static/dashboard/nav.pug
	.strip
		.contain
			.bind
				.about
					h4.what #[span Group Notes] #[i.material-icons.switch_trigger(data-switch="switch_note") keyboard_arrow_down]
					h6 Collaborate in realtime on group notes
					.switches#switch_note
						a.switch(data-run="switch_note_mode", data-type="group") #[b Group Notes]
							span All group notes
						a.switch(data-run="switch_note_mode", data-type="private") #[b Private Notes]
							span Notes available only to you
						a.switch(data-run="switch_note_mode", data-type="draft") #[b Draft Notes]
							span Unpublished saved notes
				.float-right.actions
					.input.sm
						input.filter(type="text", placeholder="Search notes", data-filter-type="notes")
						a #[i.material-icons search]
					a.switch_trigger.button.invert.sm(data-switch="switch_groups") New Note...
				.switches.right#switch_groups
					a.switch(data-groupid="0") #[b Private]
						span Only available to you
					for group in groups
						a.switch(data-groupid=group._id) #[b= group.name]
							span New note in #{group.name}
	.contain
		.inner#summary_notes
			for group in groups
				if (group.notes.length != 0)
					.summary(data-group_section=group._id)
						.grid-row
							.xs-12
								.intro
									.desc
										span.text-preview(style=`background-color:${group.color};`)= group.name.substr(0,1)
										h5= group.name
							.xs-12.all_notes
								for note in group.notes
									.unit(data-note=note._id, data-run="get_note")
										h6(class=(note.status == 1) ? 'medium-p': (note.status == 2) && 'high-p') #{note.title}
										small= `Edited ${moment(note.updated).fromNow()}`
										.content_plain
											p= note.plain
